{"version":3,"sources":["map.js"],"names":["initMap","populateInfoWindow","marker","infowindow","setContent","addListener","setAnimation","map","panBy","wikiAjax","wikiTitle","setZoom","panTo","position","open","setTilt","styles","featureType","stylers","visibility","elementType","color","google","maps","Map","document","getElementById","mapTypeId","mapTypeControl","bounds","LatLngBounds","i","locations","length","location","title","Marker","animation","Animation","DROP","MVM","locationsList","markers","push","this","largeInfowindow","toggleBounce","toggleOff","InfoWindow","showMarkers","fitBounds","ko","applyBindings"],"mappings":"AACA,QAAAA,WA0HA,QAAAC,GAAAC,EAAAC,GAEAA,EAAAD,SAAAA,IAEAC,EAAAC,WAAA,IACAD,EAAAD,OAAAA,EAEAC,EAAAE,YAAA,aAAA,WACAF,EAAAD,OAAA,KACAA,EAAAI,aAAA,MAIAC,IAAAC,MAAA,EAAA,KAKAC,SAAAP,EAAAQ,UAAAP,GAGAI,IAAAI,QAAA,IACAJ,IAAAK,MAAAV,EAAAW,UACAN,IAAAC,MAAA,QAEAL,EAAAW,KAAAP,IAAAL,GACAK,IAAAQ,QAAA,KAnJA,GAAAC,KAEAC,YAAA,iBACAC,UAEAC,WAAA,SAKAF,YAAA,iBACAG,YAAA,SACAF,UAEAC,WAAA,iBAKAF,YAAA,YACAC,UAEAG,MAAA,cAKAJ,YAAA,WACAG,YAAA,WACAF,UAEAG,MAAA,YAGAF,WAAA,SAKAF,YAAA,WACAG,YAAA,mBACAF,UAEAG,MAAA,cAKAJ,YAAA,WACAG,YAAA,qBACAF,UAEAG,MAAA,cAKAJ,YAAA,OACAC,UAEAC,WAAA,UAKAF,YAAA,UACAC,UAEAC,WAAA,UAKAF,YAAA,QACAC,UAEAG,MAAA,aAKAd,KAAA,GAAAe,QAAAC,KAAAC,IAAAC,SAAAC,eAAA,QACAC,UAAA,YACAX,OAAAA,EACAY,gBAAA,IAEAC,OAAA,GAAAP,QAAAC,KAAAO,YAEA,KAAA,GAAAC,GAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAEAlB,SAAAmB,UAAAD,GAAAG,SACAC,MAAAH,UAAAD,GAAAI,MACAzB,UAAAsB,UAAAD,GAAArB,UAEAR,OAAA,GAAAoB,QAAAC,KAAAa,QACAvB,SAAAA,SACAsB,MAAAA,MACAzB,UAAAA,UACA2B,UAAAf,OAAAC,KAAAe,UAAAC,OAIAP,UAAAD,GAAA7B,OAAAA,OAEAsC,IAAAC,gBAAAV,GAAA7B,OAAAA,OAEAwC,QAAAC,KAAAzC,QAEAA,OAAAG,YAAA,QAAA,WACAJ,EAAA2C,KAAAC,iBACAtC,IAAAC,MAAA,EAAA,KAIAN,OAAAG,YAAA,YAAAyC,cACA5C,OAAAG,YAAA,WAAA0C,UAIAF,iBAAA,GAAAvB,QAAAC,KAAAyB,eAgCAC,cACA1C,IAAA2C,UAAArB,QAGAW,IAAA,GAAAA,KACAW,GAAAC,cAAAZ","file":"main.min.js","sourcesContent":["/* eslint-disable no-unused-vars,no-undef,no-unused-expressions,no-loop-func,require-jsdoc,no-negated-condition */\nfunction initMap() {\n  var styles = [\n    {\n      featureType: 'administrative',\n      stylers: [\n        {\n          visibility: 'on'\n        }\n      ]\n    },\n    {\n      featureType: 'administrative',\n      elementType: 'labels',\n      stylers: [\n        {\n          visibility: 'simplified'\n        }\n      ]\n    },\n    {\n      featureType: 'landscape',\n      stylers: [\n        {\n          color: '#4CAF50'\n        }\n      ]\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'geometry',\n      stylers: [\n        {\n          color: '#43A047'\n        },\n        {\n          visibility: 'on'\n        }\n      ]\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'labels.text.fill',\n      stylers: [\n        {\n          color: '#414141'\n        }\n      ]\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'labels.text.stroke',\n      stylers: [\n        {\n          color: '#ffffff'\n        }\n      ]\n    },\n    {\n      featureType: 'road',\n      stylers: [\n        {\n          visibility: 'off'\n        }\n      ]\n    },\n    {\n      featureType: 'transit',\n      stylers: [\n        {\n          visibility: 'off'\n        }\n      ]\n    },\n    {\n      featureType: 'water',\n      stylers: [\n        {\n          color: '#2196F3'\n        }\n      ]\n    }\n  ];\n  map = new google.maps.Map(document.getElementById('map'), {\n    mapTypeId: 'satellite',\n    styles: styles,\n    mapTypeControl: true\n  });\n  bounds = new google.maps.LatLngBounds();\n  // Place markers on the map.\n  for (var i = 0; i < locations.length; i++) {\n    // Get position and wikiTitle from the locations array.\n    position = locations[i].location;\n    title = locations[i].title;\n    wikiTitle = locations[i].wikiTitle;\n    // Create a marker per location\n    marker = new google.maps.Marker({\n      position: position,\n      title: title,\n      wikiTitle: wikiTitle,\n      animation: google.maps.Animation.DROP\n    });\n\n    // Add current marker to the locations array.\n    locations[i].marker = marker;\n    // Make them observable by KnockOutJS\n    MVM.locationsList()[i].marker = marker;\n    // Add current marker to the marker arrar\n    markers.push(marker);\n    // Create an onclick event to open the large infowindow at each marker.\n    marker.addListener('click', function() {\n      populateInfoWindow(this, largeInfowindow);\n      map.panBy(0, 0);\n    });\n    // Two event listeners - one for mouseover, one for mouseout, to have them\n    // bounce or drop.\n    marker.addListener('mouseover', toggleBounce);\n    marker.addListener('mouseout', toggleOff);\n  }\n\n  // Create the infowindow.\n  largeInfowindow = new google.maps.InfoWindow({});\n\n  function populateInfoWindow(marker, infowindow) {\n    // Check to make sure the infowindow is not already opened on this marker.\n    if (infowindow.marker !== marker) {\n      // Clear the infowindow content to give the API time to load.\n      infowindow.setContent('');\n      infowindow.marker = marker;\n      // Make sure the marker property is cleared if the infowindow is closed.\n      infowindow.addListener('closeclick', function() {\n        infowindow.marker = null;\n        marker.setAnimation(null);\n        // Move the map back to its boundaries,\n        // bounds are defined in showMarkers(), located at the bottom of this\n        // file.\n        map.panBy(0, 0);\n      });\n      // Request data asynchronously.\n      // Arg one is the search term (en.wikipedia.com/wiki/<MY_SEARCH> ).\n      // Arg two is the current infowindow.\n      wikiAjax(marker.wikiTitle, infowindow);\n\n      // Pan map to display the whole infowindow.\n      map.setZoom(15);\n      map.panTo(marker.position);\n      map.panBy(0, -450);\n      // Open the infowindow on the current marker.\n      infowindow.open(map, marker);\n      map.setTilt(75);\n    }\n  }\n\n  showMarkers();\n  map.fitBounds(bounds);\n}\n\nMVM = new MVM();\nko.applyBindings(MVM);\n\n"]}