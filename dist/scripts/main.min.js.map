{"version":3,"sources":["map.js"],"names":["initMap","openInfoWindow","this","setAnimation","google","maps","Animation","DROP","MVM","populateInfoWindow","largeInfowindow","map","Map","document","getElementById","mapTypeId","styles","mapTypeControl","bounds","LatLngBounds","i","locations","length","position","location","title","wikiTitle","marker","Marker","animation","visible","locationsList","markers","push","addListener","toggleBounce","toggleOff","InfoWindow","event","addDomListener","window","zoomOut","fitBounds","showMarkers","mapError","alert","console","log","ko","applyBindings"],"mappings":"AACA,QAAAA,WAmCA,QAAAC,KACA,YACAC,MAAAC,aAAAC,OAAAC,KAAAC,UAAAC,MACAC,IAAAC,mBAAAP,KAAAQ,iBArCAC,IAAA,GAAAP,QAAAC,KAAAO,IAAAC,SAAAC,eAAA,QACAC,UAAA,YACAC,OAAAA,OACAC,gBAAA,IAEAC,OAAA,GAAAd,QAAAC,KAAAc,YAEA,KAAA,GAAAC,GAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAEAG,SAAAF,UAAAD,GAAAI,SACAC,MAAAJ,UAAAD,GAAAK,MACAC,UAAAL,UAAAD,GAAAM,UAEAC,OAAA,GAAAvB,QAAAC,KAAAuB,QACAL,SAAAA,SACAE,MAAAA,MACAC,UAAAA,UACAG,UAAAzB,OAAAC,KAAAC,UAAAC,KACAuB,SAAA,IAIAT,UAAAD,GAAAO,OAAAA,OAEAnB,IAAAuB,gBAAAX,GAAAO,OAAAA,OAEAK,QAAAC,KAAAN,QAEAA,OAAAO,YAAA,QAAAjC,GAGA0B,OAAAO,YAAA,YAAAC,cACAR,OAAAO,YAAA,WAAAE,UASA1B,iBAAA,GAAAN,QAAAC,KAAAgC,eAEAjC,OAAAC,KAAAiC,MAAAC,eAAAC,OAAA,SAAA,WAEAC,YAGA9B,IAAA+B,UAAAxB,QACAyB,cAGAC,SAAA,WAEAC,MAAA,mGAEAC,QAAAC,IAAA,oGAIAvC,IAAA,GAAAA,KACAwC,GAAAC,cAAAzC","file":"main.min.js","sourcesContent":["/* eslint-disable no-unused-vars,no-undef, require-jsdoc, no-alert */\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById('map'), {\n    mapTypeId: 'satellite',\n    styles: styles,\n    mapTypeControl: true\n  });\n  bounds = new google.maps.LatLngBounds();\n  // Place markers on the map.\n  for (var i = 0; i < locations.length; i++) {\n    // Get position and wikiTitle from the locations array.\n    position = locations[i].location;\n    title = locations[i].title;\n    wikiTitle = locations[i].wikiTitle;\n    // Create a marker per location\n    marker = new google.maps.Marker({\n      position: position,\n      title: title,\n      wikiTitle: wikiTitle,\n      animation: google.maps.Animation.DROP,\n      visible: true\n    });\n\n    // Add current marker to the locations array.\n    locations[i].marker = marker;\n    // Make them observable by KnockOutJS\n    MVM.locationsList()[i].marker = marker;\n    // Add current marker to the marker array\n    markers.push(marker);\n    // Create an onclick event to open the infowindow at each marker.\n    marker.addListener('click', openInfoWindow);\n    // Two event listeners - one for mouseover, one for mouseout, to have them\n    // bounce or drop.\n    marker.addListener('mouseover', toggleBounce);\n    marker.addListener('mouseout', toggleOff);\n  }\n  function openInfoWindow() {\n    'use strict';\n    this.setAnimation(google.maps.Animation.DROP);\n    MVM.populateInfoWindow(this, largeInfowindow);\n  }\n\n  // Create the infowindow.\n  largeInfowindow = new google.maps.InfoWindow({});\n  // Fit bounds if there has been a resize.\n  google.maps.event.addDomListener(window, 'resize', function() {\n    // `bounds` is a `LatLngBounds` object\n    zoomOut();\n  });\n\n  map.fitBounds(bounds);\n  showMarkers();\n}\n// If the maps API doesn't load properly\nmapError = function() {\n  // Error handling\n  alert('Google Maps API did not load correctly. Please try to refresh and' +\n    ' make sure the URL is correct.');\n  console.log('Google Maps API did not load correctly.' +\n              ' Please try to refresh and make sure the URL is correct.');\n};\n\nMVM = new MVM();\nko.applyBindings(MVM);\n\n"]}