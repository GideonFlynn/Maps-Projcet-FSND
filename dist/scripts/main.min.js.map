{"version":3,"sources":["viewmodel.js"],"names":["toggleBounce","this","getAnimation","setAnimation","google","maps","Animation","BOUNCE","toggleOff","showMarkers","i","markers","length","setMap","map","visible","markerUrlCollector","push","wikiTitle","bounds","extend","position","sort","zoomOut","fitBounds","hideMarkers","largeInfowindow","marker","searchLocations","title","locations","location","lat","lng","Place","data","animation","imageRegExp","linkRegExp","searchRegExp","christRegExp","MVM","self","locationsList","ko","observableArray","makeLocation","forEach","wikiURL","observable","contentString","query","value","toLowerCase","indexOf","setVisible","anchor","close","subscribe","listListener","event","trigger","hoverListener","hoverOut","wikiAjax","url","infowindow","$","ajax","dataType","type","headers","Api-User-Agent","crossDomain","error","jqXHR","textStatus","errorThrown","alert","html","status","responseText","console","log","success","checkRequest","rootQuery","parse","rootContent","text","infoTitle","imgFormat","replace","formattedContent","setContent","info","code","docref"],"mappings":"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","file":"main.min.js","sourcesContent":["/* eslint-disable no-unused-vars,no-undef,require-jsdoc,no-alert, no-negated-condition */\n\n/*\n *----- MAP VARIABLES -----\n */\nvar largeInfowindow;\nvar map;\nvar bounds;\nvar marker;\nvar markers = [];\nvar markerUrlCollector = [];\n/*\n *----- LOCAL VARIABLES -----\n */\nvar searchLocations;\nvar title;\nvar wikiTitle;\nvar position;\nvar locations = [\n  {\n    wikiTitle: 'Chichen_Itza',\n    title: 'Chichen Itza',\n    location: {lat: 20.683056, lng: -88.568611}\n  },\n  {\n    wikiTitle: 'Christ_the_Redeemer_(statue)',\n    title: 'Christ the Redeemer statue',\n    location: {lat: -22.951944, lng: -43.210556}\n  },\n  {\n    wikiTitle: 'Colosseum',\n    title: 'Colosseum',\n    location: {lat: 41.890169, lng: 12.492269}\n  },\n  {\n    wikiTitle: 'Great_Pyramid_of_Giza',\n    title: 'Great Pyramid of Giza',\n    location: {lat: 29.979175, lng: 31.134358}\n  },\n  {\n    wikiTitle: 'Great_Wall_of_China',\n    title: 'Great Wall of China',\n    location: {lat: 40.68, lng: 117.23}\n  },\n  {\n    wikiTitle: 'Machu_Picchu',\n    title: 'Machu Picchu',\n    location: {lat: -13.163333, lng: -72.545556}\n  },\n  {\n    wikiTitle: 'Petra',\n    title: 'Petra',\n    location: {lat: 30.328611, lng: 35.441944}\n  },\n  {\n    wikiTitle: 'Taj_Mahal',\n    title: 'Taj Mahal',\n    location: {lat: 27.175015, lng: 78.042155}\n  },\n  {\n    wikiTitle: 'Uluru',\n    title: 'Uluru',\n    location: {lat: -25.363, lng: 131.044}\n  }\n];\n\n// A template for locations.\n// Define what data a location has.\nvar Place = function(data) {\n  this.title = data.title;\n  this.location = data.position;\n  this.wikiTitle = data.wikiTitle;\n  this.marker = data.marker;\n  this.animation = data.animation;\n};\n/*\n *----- REGULAR EXPRESSIONS -----\n */\n// RegExp to make sure links redirect properly\n// Note: The coordinates link are getting messed up. (nothing breaks though)\nvar imageRegExp = /\\/\\//g;\nvar linkRegExp = /href=\"/g;\nvar searchRegExp = / /g;\nvar christRegExp = /statue/g;\n/*\n *----- VIEW MODEL -----\n * This is the main viewmodel,\n * It contains the search functionality.\n * It also contains the listeners needed for animations.\n */\n\nvar MVM;\nMVM = function() {\n  'use strict';\n  var self = this;\n  // Google Maps need this array.\n  this.locationsList = ko.observableArray([]);\n\n  var makeLocation = function() {\n  // Make each location with the Place template.\n    locations.forEach(function(location) {\n      self.locationsList.push(new Place(location));\n    });\n  };\n  makeLocation();\n  // This string is used for ajax calls,\n  // It holds the current markers wikiTitle.\n  self.wikiURL = ko.observable();\n\n  // Observable for use with ajax content,\n  // it will go through the regexp variables.\n  self.contentString = ko.observable('');\n\n  // Used to keep track of the search query.\n  self.query = ko.observable('');\n\n  self.searchLocations = function(value) {\n    'use strict';\n    self.locationsList([]);\n\n    for (var i = 0; i < locations.length; i++) {\n      // If the lowercase version of the query, match the a marker wikiTitle,\n      // make the current locations marker visible.\n      if (locations[i].wikiTitle\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0) {\n        locations[i].marker.setVisible(true);\n        self.locationsList.push(locations[i]);\n      } else {\n        // Make the marker invisible :O\n        if (largeInfowindow.anchor === locations[i].marker) {\n          largeInfowindow.close();\n        }\n        locations[i].marker.setVisible(false);\n      }\n    }\n  };\n  // Subscribe the query to the filter function.\n  self.query.subscribe(self.searchLocations);\n\n  /*\n   *----- LISTENERS -----\n   */\n  self.listListener = function(location) {\n    // Trigger the markers click listener.\n    google.maps.event.trigger(location.marker, 'click');\n  };\n  self.hoverListener = function(location) {\n    // Trigger the markers mouseover listener.\n    google.maps.event.trigger(location.marker, 'mouseover');\n    // Bounce the marker at the location.\n    location.marker.setAnimation(google.maps.Animation.BOUNCE);\n  };\n  self.hoverOut = function(location) {\n    // Trigger the markers mouseout listener.\n    google.maps.event.trigger(location.marker, 'mouseout');\n    // Cancel the animation.\n    location.marker.setAnimation(null);\n  };\n  self.showMarkers = showMarkers;\n  self.hideMarkers = hideMarkers;\n  self.zoomOut = zoomOut;\n};\n\n// Make an ajax request to Wikipedia.\nwikiAjax = function(url, infowindow) {\n  // Generate a url based on the markers wikiTitle.\n  MVM.wikiURL = 'https://en.wikipedia.org/w/api.php?action=parse&prop=info%7Ctext&page=' +\n                 url +\n                '&utf8=&format=json&formatversion=2&mobileformat=1';\n\n  $.ajax({\n    url: MVM.wikiURL,\n    dataType: 'jsonp',\n    type: 'GET',\n    headers: {'Api-User-Agent': 'allmynameswastaken@gmail.com'},\n    crossDomain: true,\n    error: function(jqXHR, textStatus, errorThrown) {\n      alert('An error occurred... Look at the console ' +\n        '(F12 or Ctrl+Shift+I, Console tab)' +\n        ' for more information!');\n      $('#result').html(\n        '<p>status code: ' +\n        jqXHR.status +\n        '</p><p>errorThrown: ' +\n        errorThrown +\n        '</p><p>jqXHR.responseText:</p><div>' +\n        jqXHR.responseText +\n        '</div>'\n      );\n      console.log('jqXHR:');\n      console.log(jqXHR);\n      console.log('textStatus:', textStatus);\n      console.log('errorThrown:', errorThrown);\n    },\n    // data is a jsonp object with a predictable array, starting with parse.\n    success: function(data) {\n      console.log(data);\n      // Check if the response contains an error.\n      if (!data.error) {\n        // The root of the object.\n        var rootQuery = data.parse;\n        // Content og the object\n        var rootContent = rootQuery.text;\n        // Define the title of the wiki-page.\n        var infoTitle = rootQuery.title;\n        // Go through the text of the wiki-page and replace all links.\n        var imgFormat = rootContent.replace(imageRegExp, 'https://');\n        // Go through the text of the wiki-page and replace all image\n        // references.\n        var formattedContent = imgFormat.replace(linkRegExp,\n          'href=\"https://en.wikipedia.org');\n\n        // Take the formatted strings and display the wiki-page's title and the\n        // text.\n        formattedContent =\n          '<h1>This is ' + infoTitle + '</h1>' + formattedContent;\n        // Assign the formatted content to the content observable.\n        MVM.contentString = formattedContent;\n        if (MVM.contentString === '') {\n          infowindow.setContent(\n            '<h3>An error occurred, ' +\n            'try again & make sure the URL is correct.' +\n            ' The URL should match a \"en.wikipedia.com\" url.</h3>'\n          );\n        } else {\n          infowindow.setContent(MVM.contentString);\n        }\n      } else {\n        // If an error is present, warn the user.\n        checkRequest(data, infowindow);\n      }\n    }\n  });\n};\n\ncheckRequest = function(data, infowindow) {\n  'use strict';\n  infowindow.setContent(\n    '<h2>The request contains an error.</h2>' +\n    '<h3>' +\n    'Error info: ' +\n    data.error.info +\n    '<br>' +\n    'Error code: ' +\n    data.error.code +\n    '<br>' +\n    '</h3>' +\n    '<h5>' +\n    'Try again & make sure the URL is correct. ' +\n    'It should match a \"en.wikipedia.com\" url.</h5>' +\n    data.error.docref\n  );\n};\n\n/*\n *----- TOGGLES -----\n */\n\n// Toggles the markers bounce animation\nfunction toggleBounce() {\n  'use strict';\n  // Check if current marker is animating.\n  if (this.getAnimation() !== null) {\n    this.setAnimation(null);\n  } else {\n    // If not, make it bounce!\n    this.setAnimation(google.maps.Animation.BOUNCE);\n  }\n}\n// Cancel the current animation. :(\nfunction toggleOff() {\n  'use strict';\n  return this.setAnimation(null);\n}\n// Display all markers on the map.\nfunction showMarkers() {\n  'use strict';\n  // Iterate over the markers array\n  for (var i = 0; i < markers.length; i++) {\n    // Set marker on the map.\n    markers[i].setMap(map);\n    // Extend boundaries to current marker.\n    markers[i].visible = true;\n    markerUrlCollector.push(markers[i].wikiTitle);\n    bounds.extend(markers[i].position);\n  }\n  markerUrlCollector.sort();\n}\nfunction zoomOut() {\n  'use strict';\n  map.fitBounds(bounds);\n}\n// Hide all markers on the map.\nfunction hideMarkers() {\n  'use strict';\n  // Iterate over the markers array\n  for (var i = 0; i < markers.length; i++) {\n    // Set marker on the map.\n    markers[i].setMap(null);\n  }\n}\n"]}